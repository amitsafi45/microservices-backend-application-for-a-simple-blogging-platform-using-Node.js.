// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  username      String    @db.VarChar(20)
  email         String    @unique
  password      String
  token         Token[]
  profile       Profile?
  profileStatus Boolean
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  @@map("user")
}

model Token {
  id        String      @id @default(uuid())
  token     String       @unique()
  expiresAt DateTime   @db.Timestamptz(3)
  status    TokenStatus
  user      User        @relation(fields: [userID], references: [id])
  userID    String      @map("user_id")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime?   @map("updated_at")
  deletedAt DateTime?   @map("deleted_at")

  @@map("token")
}

model Profile {
  id              String    @id @default(uuid())
  bio             String?
  socialMediaLink String[]  @map("social_media_link")
  address         String?
  media           Media?
  user            User      @relation(fields: [userID], references: [id])
  userID          String    @unique @map("user_id")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime? @map("updated_at")
  deletedAt       DateTime? @map("deleted_at")

  @@map("profile")
}

model Media {
  id        String    @id @default(uuid())
  name      String
  type      MediaType
  profile   Profile   @relation(fields: [profileID], references: [id])
  profileID String    @unique @map("profile_id")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("media")
}

enum TokenStatus {
  USED
  UN_USED
}

enum MediaType {
  PROFILE
}
